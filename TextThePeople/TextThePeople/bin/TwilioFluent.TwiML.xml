<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TwilioFluent.TwiML</name>
    </assembly>
    <members>
        <member name="T:TwilioFluent.TwiML.CallDirection">
            <summary>
            Indicates the direction of a call from the application's perspective.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallDirection.None">
            <summary>
            Not used by Twilio
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallDirection.Inbound">
            <summary>
            The call was received by the application.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallDirection.OutboundDial">
            <summary>
            The application initiated the call.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallDirection.OutboundApi">
            <summary>
            The application initiated the call. (undocumented but used value)
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.DialCallStatus">
            <summary>
            indicates the status of a Dail action.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DialCallStatus.None">
            <summary>
            Not used by Twilio
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DialCallStatus.Completed">
            <summary>
            The called party answered the call and was connected to the caller.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DialCallStatus.Busy">
            <summary>
            Twilio received a busy signal when trying to connect to the called party.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DialCallStatus.NoAnswer">
            <summary>
            The called party did not pick up before the timeout period passed.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DialCallStatus.Failed">
            <summary>
            Twilio was unable to route to the given phone number. This is frequently caused by dialing a properly
            formated but non-existent phone number.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DialCallStatus.Cancelled">
            <summary>
            The call was canceled via the REST API before it was answered.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Reason">
            <summary>
            Why we're rejecting a call.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.Reason.Rejected">
            <summary>
            The call is rejected.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.Reason.Busy">
            <summary>
            The service is busy.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.CallStatus">
            <summary>
            The following are the possible values for the 'CallStatus' parameter. These
            values also apply to the 'DialCallStatus' parameter sent when a Dial
            call completes.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallStatus.None">
            <summary>
            Not used by Twilio
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallStatus.Queued">
            <summary>
            The call is ready and waiting in line before going out.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallStatus.Ringing">
            <summary>
            The call is currently ringing.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallStatus.InProgress">
            <summary>
            The call was answered and Twilio is currently in progress.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallStatus.Completed">
            <summary>
            The call was answered and has ended normally.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallStatus.Busy">
            <summary>
            The caller received a busy signal.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallStatus.Failed">
            <summary>
            The call could not be completed as dialed, most likely because the phone number
            was non-existent.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallStatus.NoAnswer">
            <summary>
            The call ended without being answered.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.CallStatus.Canceled">
            <summary>
            The call was canceled via the REST API while queued or ringing.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.SmsStatus">
            <summary>
            Indicates the status of a Twilio SMS.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.SmsStatus.None">
            <summary>
            Not used by Twilio
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.SmsStatus.Sending">
            <summary>
            The message is being sent.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.SmsStatus.Invalid">
            <summary>
            The recipient phone number is invalid.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.TranscriptionStatus">
            <summary>
            Indicates the status of a Transcription.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.TranscriptionStatus.None">
            <summary>
            Not used by Twilio
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.TranscriptionStatus.Completed">
            <summary>
            Transcription completed successfully.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.TranscriptionStatus.Failed">
            <summary>
            Transcription failed.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.EnumUtil">
            <summary>
            Provides Enum parsing helper functions.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.EnumUtil.ParseTwilioEnum``1(System.String)">
            <summary>
            Helps parse Twilio enumerations. Removes '-' characters and ignores case.
            </summary>
            <typeparam name="TEnum">The Type of Enum to parse.</typeparam>
            <param name="enumValue">The string value to parse.</param>
        </member>
        <member name="T:TwilioFluent.TwiML.Fluent.FluentDialWrapper">
            <summary>
            An internal class used to enable fluent functionality.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Fluent.ITwilioFluentDial">
            <summary>
            Fluent bindings for the Dial verb.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentDial.Number(System.String,System.String,System.String)">
            <summary>
            Adds a Number noun to the Dial verb.
            </summary>
            <param name="phoneNumber">The number to dial.</param>
            <param name="sendDigits">The digits to send once connected.</param>
            <param name="url">The URL with TwilML to execute on connect.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentDial.Client(System.String)">
            <summary>
            Adds a Client noun to the Dial verb.
            </summary>
            <param name="clientIdentifier">The client identifier.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentDial.Conference(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32})">
            <summary>
            Adds a Conference noun to the Dial verb.
            </summary>
            <param name="name">The name of the conference to join.</param>
            <param name="muted">True to start muted.</param>
            <param name="beep">True to beep on enter.</param>
            <param name="startConferenceOnEnter">Start conference on enter.</param>
            <param name="endConferenceOnExit">End conference on exit.</param>
            <param name="waitUrl">The wait URL (hold music).</param>
            <param name="waitMethod">The wait URL request method.</param>
            <param name="maxParticipants">The max nuber of participants.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentDial.End">
            <summary>
            Ends modification of the Dial verb.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.FluentDialWrapper.#ctor(TwilioFluent.TwiML.Fluent.ITwilioFluentRoot,TwilioFluent.TwiML.Dial)">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Fluent.FluentDialWrapper"/> class.
            </summary>
            <param name="fluentRoot">The fluent root to return on end.</param>
            <param name="dial">The dial verb to wrap.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.FluentDialWrapper.Number(System.String,System.String,System.String)">
            <summary>
            Adds a Number noun to the Dial verb.
            </summary>
            <param name="phoneNumber">The number to dial.</param>
            <param name="sendDigits">The digits to send once connected.</param>
            <param name="url">The URL with TwilML to execute on connect.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.FluentDialWrapper.Client(System.String)">
            <summary>
            Adds a Client noun to the Dial verb.
            </summary>
            <param name="clientIdentifier">The client identifier.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.FluentDialWrapper.Conference(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32})">
            <summary>
            Adds a Conference noun to the Dial verb.
            </summary>
            <param name="name">The name of the conference to join.</param>
            <param name="muted">True to start muted.</param>
            <param name="beep">True to beep on enter.</param>
            <param name="startConferenceOnEnter">Start conference on enter.</param>
            <param name="endConferenceOnExit">End conference on exit.</param>
            <param name="waitUrl">The wait URL (hold music).</param>
            <param name="waitMethod">The wait URL request method.</param>
            <param name="maxParticipants">The max nuber of participants.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.FluentDialWrapper.End">
            <summary>
            Ends modification of the Dial verb.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Fluent.FluentGatherWrapper">
            <summary>
            An internal class used to enable fluent functionality.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Fluent.ITwilioFluentGather">
            <summary>
            Fluent bindings for the Gather verb.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Fluent.ITwilioFluentSayPlayPause`1">
            <summary>
            Fluent bindings for the Say, Play, and Pause verbs.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentSayPlayPause`1.Say(System.String,System.Nullable{TwilioFluent.TwiML.Voice},System.Nullable{TwilioFluent.TwiML.Language},System.Nullable{System.Int32})">
            <summary>
            Adds a Say verb to the current container.
            </summary>
            <param name="text">The text to speak.</param>
            <param name="voice">The voice to use.</param>
            <param name="language">The language to use.</param>
            <param name="loop">The number of times to loop.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentSayPlayPause`1.Say(System.String,System.Object[])">
            <summary>
            Adds a Say verb to the current container.
            </summary>
            <param name="format">The format string for the text to speak.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentSayPlayPause`1.Play(System.String,System.Nullable{System.Int32})">
            <summary>
            Adds a Play verb to the current container.
            </summary>
            <param name="content">The URL of the content to play.</param>
            <param name="loop">The number of times to loop.</param>
            <returns></returns>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentSayPlayPause`1.Pause(System.Int32)">
            <summary>
            Adds a Pause verb to the current container.
            </summary>
            <param name="length">How many seconds Twilio will wait silently before continuing on.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentGather.End">
            <summary>
            Ends modification of the Dial verb.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.FluentGatherWrapper.#ctor(TwilioFluent.TwiML.Fluent.ITwilioFluentRoot,TwilioFluent.TwiML.Gather)">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Fluent.FluentGatherWrapper"/> class.
            </summary>
            <param name="fluentRoot">The fluent root to return on end.</param>
            <param name="gather">The gather verb to wrap.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.FluentGatherWrapper.End">
            <summary>
            Ends modification of the Dial verb.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.FluentGatherWrapper.Say(System.String,System.Nullable{TwilioFluent.TwiML.Voice},System.Nullable{TwilioFluent.TwiML.Language},System.Nullable{System.Int32})">
            <summary>
            Adds a Say verb to the current container.
            </summary>
            <param name="text">The text to speak.</param>
            <param name="voice">The voice to use.</param>
            <param name="language">The language to use.</param>
            <param name="loop">The number of times to loop.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.FluentGatherWrapper.Say(System.String,System.Object[])">
            <summary>
            Adds a Say verb to the current container.
            </summary>
            <param name="format">The format string for the text to speak.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.FluentGatherWrapper.Pause(System.Int32)">
            <summary>
            Adds a Pause verb to the current container.
            </summary>
            <param name="length">The number of seconds to pause.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.FluentGatherWrapper.Play(System.String,System.Nullable{System.Int32})">
            <summary>
            Adds a Play verb to the current container.
            </summary>
            <param name="content">The URL of the content to play.</param>
            <param name="loop">The number of times to loop.</param>
        </member>
        <member name="T:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot">
            <summary>
            Fluent bindings for Twilio responses.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot.Gather(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32},System.Nullable{TwilioFluent.TwiML.DTMF},System.Nullable{System.Int32})">
            <summary>
            Add a Gather verb to the response.
            </summary>
            <param name="action">The action callback URI.</param>
            <param name="method">The HTTP method.</param>
            <param name="timeout">The timeout in seconds.</param>
            <param name="finishOnKey">The key on which to finish gathering.</param>
            <param name="numberOfDigits">The number of digits to gather.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot.Record(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32},System.Nullable{TwilioFluent.TwiML.DTMF},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean})">
            <summary>
            Adds a Record verb to the response.
            </summary>
            <param name="action">The action URL to callback.</param>
            <param name="method">The HTTP method to use.</param>
            <param name="timeout">The timeout in seconds.</param>
            <param name="finishOnKey">The key on which to finish.</param>
            <param name="maxLength">The maximum duration to record.</param>
            <param name="transcribe">True to transcribe the call.</param>
            <param name="transcribeCallback">The URL to call back when transcription is complete.</param>
            <param name="playBeep">True to play a beep when beginning recording.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot.Sms(System.String,System.String,System.String,System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.String)">
            <summary>
            Adds an SMS verb to the response.
            </summary>
            <param name="text">The SMS text to send.</param>
            <param name="to">The recipient.</param>
            <param name="from">The sender.</param>
            <param name="action">The URL to call back to continue the call. Null to continue processing the current response.</param>
            <param name="method">The HTTP method to call back.</param>
            <param name="statusCallback">The status callback for delivery reporting.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot.Dial(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a Dial verb to the response.
            </summary>
            <param name="action">The action callback URI.</param>
            <param name="method">The HTTP method.</param>
            <param name="timeout">The timeout.</param>
            <param name="disconnectOnStar">True to hangup on star.</param>
            <param name="timeLimit">The call time limit.</param>
            <param name="callerId">The caller id to show the recipient.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot.HangUp">
            <summary>
            Adds a HangUp verb to the response.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot.Redirect(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod})">
            <summary>
            Adds a Redirect verb to the response.
            </summary>
            <param name="uri">The URI to fetch next.</param>
            <param name="method">The HTTP method for the request.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot.Reject">
            <summary>
            Adds a Reject verb to the response.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot.Reject(TwilioFluent.TwiML.Reason)">
            <summary>
            Adds a Reject verb to the response.
            </summary>
            <param name="reason">The reason for rejection.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot.Write(System.IO.Stream)">
            <summary>
            Writes the response to the specified output stream.
            </summary>
            <param name="outputStream">The output stream.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot.Write(System.Text.StringBuilder)">
            <summary>
            Writes the response to the specified StringBuilder.
            </summary>
            <param name="builder">The StringBuilder.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Fluent.ITwilioFluentRoot.Write(System.Xml.XmlWriter)">
            <summary>
            Writes the response to the specified XmlWriter.
            </summary>
            <param name="writer">The XmlWriter.</param>
        </member>
        <member name="T:TwilioFluent.TwiML.IDialChild">
            <summary>
            Indicates that a class represents a root level Twilio verb.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.IGatherChild">
            <summary>
            Indicates that a class represents a root level Twilio verb.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Client">
            <summary>
            The Dial verb's Client noun specifies a client identifier to dial.
            
            You can use multiple Client nouns within a Dial verb to simultaneously attempt a
            connection with many clients at once. The first client to accept the incoming
            connection is connected to the call and the other connection attempts are canceled.
            If you want to connect with multiple other clients simultaneously, read about the
            Conference noun.
            
            The client identifier currently may only contain alpha-numberic and underscore characters.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.TwilioCommand">
            <summary>
            Implements common serialization logic for all Twilio verbs.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.ITwilioCommand">
            <summary>
            Indicates that a class can be written to a Twilio response.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.ITwilioCommand.Write(System.Xml.XmlWriter)">
            <summary>
            Writes this element to the Twilio response.
            </summary>
            <param name="writer">The XmlWriter.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioCommand.Write(System.Xml.XmlWriter)">
            <summary>
            Writes this element to the Twilio response.
            </summary>
            <param name="writer">The XmlWriter.</param>
        </member>
        <member name="P:TwilioFluent.TwiML.TwilioCommand.SerializableRepresentation">
            <summary>
            The serializable representation.  Sometimes you need to return
            a proxy for things to work.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Client.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Client"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Client.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Client"/> class.
            </summary>
            <param name="clientIdentifier">The client identifier.</param>
        </member>
        <member name="P:TwilioFluent.TwiML.Client.Identifier">
            <summary>
            The client identifier.  Currently may only contain alpha-numberic and underscore
            characters.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Conference">
             <summary>
             The Dial verb's Conference noun allows you to connect to a conference room.
             Much like how the Number noun allows you to connect to another phone number,
             the Conference noun allows you to connect to a named conference room and
             talk with the other callers who have also connected to that room.
             
             The name of the room is up to you and is namespaced to your account. This
             means that any caller who joins 'room1234' via your account will end up in
             the same conference room, but callers connecting through different accounts
             would not. The maximum number of participants in a single Twilio conference
             room is 40.
             
             By default, Twilio conference rooms enable a number of useful features used
             by business conference bridges:
             
            	* Conferences do not start until at least two participants join.
            	* While waiting, customizable background music is played.
            	* When participants join and leave, notification sounds are played to
            	  inform the other participants.
            
             You can configure or disable each of these features based on your particular
             needs.
             </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Conference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Conference"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Conference.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Conference"/> class.
            </summary>
            <param name="name">The conference room name.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Conference.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Conference"/> class.
            </summary>
            <param name="name">The name of the conference to join.</param>
            <param name="muted">True to start muted.</param>
            <param name="beep">True to beep on enter.</param>
            <param name="startConferenceOnEnter">Start conference on enter.</param>
            <param name="endConferenceOnExit">End conference on exit.</param>
            <param name="waitUrl">The wait URL (hold music).</param>
            <param name="waitMethod">The wait URL request method.</param>
            <param name="maxParticipants">The max nuber of participants.</param>
        </member>
        <member name="P:TwilioFluent.TwiML.Conference.Muted">
            <summary>
            The 'muted' attribute lets you specify whether a participant can speak on
            the conference. If this attribute is set to 'true', the participant will
            only be able to listen to people on the conference. This attribute
            defaults to 'false'.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Conference.Beep">
            <summary>
            The 'beep' attribute lets you specify whether a notification beep is played
            to the conference when a participant joins or leaves the conference. This
            defaults to 'true'.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Conference.StartConferenceOnEnter">
            <summary>
            This attribute tells a conference to start when this participant joins the
            conference, if it is not already started. This is true by default. If this
            is false and the participant joins a conference that has not started, they
            are muted and hear background music until a participant joins where
            startConferenceOnEnter is true. This is useful for implementing moderated
            conferences.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Conference.EndConferenceOnExit">
            <summary>
            If a participant has this attribute set to 'true', then when that
            participant leaves, the conference ends and all other participants drop out.
            This defaults to 'false'. This is useful for implementing moderated
            conferences that bridge two calls and allow either call leg to continue
            executing TwiML if the other hangs up.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Conference.WaitUrl">
            <summary>
            The 'waitUrl' attribute lets you specify a URL for music that plays before
            the conference has started. The URL may be an MP3, a WAV or a TwiML document
            that uses Play or Say for content. This defaults to a selection of Creative
            Commons licensed background music, but you can replace it with your own music
            and messages. If the 'waitUrl' responds with TwiML, Twilio will only process
            Play, Say, and Redirect verbs. Record, Dial, and Gather verbs are not allowed.
            
            If you do not wish anything to play while waiting for the conference to start,
            specify the empty string (set 'waitUrl' to '').
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Conference.WaitUrlSurrogate">
            <summary>
            For serialization.  See WaitUrl.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Conference.WaitMethod">
            <summary>
            This attribute indicates which HTTP method to use when requesting 'waitUrl'.
            It defaults to 'POST'. Be sure to use 'GET' if you are directly requesting
            static audio files such as WAV or MP3 files so that Twilio properly caches
            the files.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Conference.MaxParticipants">
            <summary>
            This attribute indicates the maximum number of participants you want to
            allow within a named conference room. The default maximum number of
            participants is 40. The value must be a positive integer less than or
            equal to 40.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Conference.Name">
            <summary>
            The conference room name. Namespaced per account.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.TwilioFluentBuilder">
            <summary>
            A fluent Twilio response builder.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.TwilioFluentBuilder.Children">
            <summary>
            The child elements of this Twilio response.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.TwilioFluentBuilder.DefaultSettings">
            <summary>
            The default XmlWriter settings tp use for output.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.TwilioFluentBuilder"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Add(TwilioFluent.TwiML.IResponseChild)">
            <summary>
            Adds the specified child.
            </summary>
            <param name="tag">The child to add.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Say(System.String,System.Nullable{TwilioFluent.TwiML.Voice},System.Nullable{TwilioFluent.TwiML.Language},System.Nullable{System.Int32})">
            <summary>
            Adds a Say verb to the current container.
            </summary>
            <param name="text">The text to speak.</param>
            <param name="voice">The voice to use.</param>
            <param name="language">The language to use.</param>
            <param name="loop">The number of times to loop.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Say(System.String,System.Object[])">
            <summary>
            Adds a Say verb to the current container.
            </summary>
            <param name="format">The format string for the text to speak.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Pause(System.Int32)">
            <summary>
            Adds a Pause verb to the current container.
            </summary>
            <param name="length">How many seconds Twilio will wait silently before continuing on.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Gather(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32},System.Nullable{TwilioFluent.TwiML.DTMF},System.Nullable{System.Int32})">
            <summary>
            Add a Gather verb to the response.
            </summary>
            <param name="action">The action callback URI.</param>
            <param name="method">The HTTP method.</param>
            <param name="timeout">The timeout in seconds.</param>
            <param name="finishOnKey">The key on which to finish gathering.</param>
            <param name="numberOfDigits">The number of digits to gather.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Play(System.String,System.Nullable{System.Int32})">
            <summary>
            Adds a Play verb to the current container.
            </summary>
            <param name="content">The URL of the content to play.</param>
            <param name="loop">The number of times to loop.</param>
            <returns></returns>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Record(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32},System.Nullable{TwilioFluent.TwiML.DTMF},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean})">
            <summary>
            Adds a Record verb to the response.
            </summary>
            <param name="action">The action URL to callback.</param>
            <param name="method">The HTTP method to use.</param>
            <param name="timeout">The timeout in seconds.</param>
            <param name="finishOnKey">The key on which to finish.</param>
            <param name="maxLength">The maximum duration to record.</param>
            <param name="transcribe">True to transcribe the call.</param>
            <param name="transcribeCallback">The URL to call back when transcription is complete.</param>
            <param name="playBeep">True to play a beep when beginning recording.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Sms(System.String,System.String,System.String,System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.String)">
            <summary>
            Adds an SMS verb to the response.
            </summary>
            <param name="text">The SMS text to send.</param>
            <param name="to">The recipient.</param>
            <param name="from">The sender.</param>
            <param name="action">The URL to call back to continue the call. Null to continue processing the current response.</param>
            <param name="method">The HTTP method to call back.</param>
            <param name="statusCallback">The status callback for delivery reporting.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Dial(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            Adds a Dial verb to the response.
            </summary>
            <param name="action">The action callback URI.</param>
            <param name="method">The HTTP method.</param>
            <param name="timeout">The timeout.</param>
            <param name="disconnectOnStar">True to hangup on star.</param>
            <param name="timeLimit">The call time limit.</param>
            <param name="callerId">The caller id to show the recipient.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.HangUp">
            <summary>
            Adds a HangUp verb to the response.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Redirect(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod})">
            <summary>
            Adds a Redirect verb to the response.
            </summary>
            <param name="uri">The URI to fetch next.</param>
            <param name="method">The HTTP method for the request.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Reject">
            <summary>
            Adds a Reject verb to the response.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Reject(TwilioFluent.TwiML.Reason)">
            <summary>
            Adds a Reject verb to the response.
            </summary>
            <param name="reason">The reason for rejection.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Write(System.IO.Stream)">
            <summary>
            Writes the response to the specified output stream.
            </summary>
            <param name="outputStream">The output stream.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Write(System.Text.StringBuilder)">
            <summary>
            Writes the response to the specified StringBuilder.
            </summary>
            <param name="builder">The StringBuilder.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.Write(System.Xml.XmlWriter)">
            <summary>
            Writes the response to the specified XmlWriter.
            </summary>
            <param name="writer">The XmlWriter.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioFluentBuilder.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:TwilioFluent.TwiML.TwilioResponse">
            <summary>
            Useful for advanced scenarios where the fluent interface is insufficient.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.TwilioResponse"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioResponse.#ctor(TwilioFluent.TwiML.IResponseChild[])">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.TwilioResponse"/> class.
            </summary>
            <param name="children">The children to include in the response.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioResponse.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioResponse.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:TwilioFluent.TwiML.TwilioSignatureValidator">
            <summary>
            Provides Twilio request signature validation
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioSignatureValidator.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.TwilioSignatureValidator"/> class.
            </summary>
            <param name="authToken">Your application's Twilio auth token.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.TwilioSignatureValidator.Validate(System.String,System.String,System.Tuple{System.String,System.String}[])">
            <summary>
            Validates the Twilio signature on the specified request.
            Cannot detect replay attacks, so use of SSL + Client Authentication is recommended.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Dial">
            <summary>
            The Dial verb connects the current caller to an another phone. If the called party
            picks up, the two parties are connected and can communicate until one hangs up. If
            the called party does not pick up, if a busy signal is received, or if the number
            doesn't exist, the dial verb will finish.
            
            When the dialed call ends, Twilio makes a GET or POST request to the 'action' URL
            if provided. Call flow will continue using the TwiML received in response to that
            request.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.IResponseChild">
            <summary>
            Indicates that a class represents a root level Twilio verb.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Dial.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Dial"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Dial.#ctor(System.Uri,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Dial"/> class.
            </summary>
            <param name="action">The action callback URI.</param>
            <param name="method">The HTTP method.</param>
            <param name="timeout">The timeout.</param>
            <param name="disconnectOnStar">True to hangup on star.</param>
            <param name="timeLimit">The call time limit.</param>
            <param name="callerId">The caller id to show the recipient.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Dial.#ctor(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Dial"/> class.
            </summary>
            <param name="action">The action callback URI.</param>
            <param name="method">The HTTP method.</param>
            <param name="timeout">The timeout.</param>
            <param name="disconnectOnStar">True to hangup on star.</param>
            <param name="timeLimit">The call time limit.</param>
            <param name="callerId">The caller id to show the recipient.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Dial.Add(TwilioFluent.TwiML.IDialChild)">
            <summary>
            Adds the specified child element.
            </summary>
            <param name="child">The child element to add.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Dial.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:TwilioFluent.TwiML.Dial.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:TwilioFluent.TwiML.Dial.Children">
            <summary>
            Gets or sets the children of this verb.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Dial.Action">
            <summary>
            The 'action' attribute takes a URL as an argument. When the dialed call ends,
            Twilio will make a GET or POST request to this URL including the parameters
            below.
            
            If you provide an 'action' URL, Twilio will continue the current call after the
            dialed party has hung up, using the TwiML received in your response to the
            'action' URL request. Any TwiML verbs occuring after a Dial which specifies
            an 'action' attribute are unreachable.
            
            If no 'action' is provided, Dial will finish and Twilio will move on to the
            next TwiML verb in the document. If there is no next verb, Twilio will end
            the phone call. Note that this is different from the behavior of Record and
            Gather. Dial does not make a request to the current document's URL by default
            if no 'action' URL is provided. Instead the call flow falls through to the
            next TwiML verb.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Dial.Method">
            <summary>
            The 'method' attribute takes the value 'GET' or 'POST'. This tells Twilio
            whether to request the 'action' URL via HTTP GET or POST. This attribute is
            modeled after the HTML form 'method' attribute. 'POST' is the default value.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Dial.Timeout">
            <summary>
            The 'timeout' attribute sets the limit in seconds that Dial waits for the
            called party to answer the call. Basically, how long should Twilio let the
            call ring before giving up and reporting 'no-answer' as the 'DialCallStatus'.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Dial.DisconnectOnStar">
            <summary>
            The 'hangupOnStar' attribute lets the calling party hang up on the called
            party by pressing the '*' key on his phone. When two parties are connected
            using Dial, Twilio blocks execution of further verbs until the caller or
            called party hangs up. This feature allows the calling party to hang up on
            the called party without having to hang up her phone and ending her TwiML
            processing session. When the caller presses '*' Twilio will hang up on the
            called party. If an 'action' URL was provided, Twilio submits 'completed'
            as the 'DialCallStatus' to the URL and processes the response. If no 'action'
            was provided Twilio will continue on to the next verb in the current TwiML
            document.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Dial.TimeLimit">
            <summary>
            The 'timeLimit' attribute sets the maximum duration of the Dial in seconds.
            For example, by setting a time limit of 120 seconds Dial will hang up on
            the called party automatically two minutes into the phone call. By default,
            there is a four hour time limit set on calls.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Dial.CallerId">
            <summary>
            The 'callerId' attribute lets you specify the caller ID that will appear to
            the called party when Twilio calls. By default, when you put a Dial in your
            TwiML response to Twilio's inbound call request, the caller ID that the
            dialed party sees is the inbound caller's caller ID.
            
            For example, an inbound caller to your Twilio number has the caller ID
            1-415-123-4567. You tell Twilio to execute a Dial verb to 1-858-987-6543 to
            handle the inbound call. The called party (1-858-987-6543) will see
            1-415-123-4567 as the caller ID on the incoming call.
            
            You are allowed to change the phone number that the called party sees to
            one of the following:
            * either the 'To' or 'From' number provided in Twilio's TwiML request
              to your app
            * any incoming phone number you have purchased from Twilio
            * any phone number you have validated with Twilio for use as an outgoing
              caller ID
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Dial.CallerIdSurrogate">
            <summary>
            Used for serialization.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Dial.SerializableRepresentation">
            <summary>
            The serializable representation.  Sometime you need to return
            a proxy for things to work.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Gather">
            <summary>
            The Gather verb collects digits that a caller enters into his or her telephone keypad.
            When the caller is done entering data, Twilio submits that data to the provided action
            URL in an HTTP GET or POST request, just like a web browser submits data from an HTML
            form.
            
            If no input is received before timeout, Gather falls through to the next verb in the
            TwiML document.
            
            You may optionally nest Say and Play verbs within a Gather verb while waiting for input.
            This allows you to read menu options to the caller while letting her enter a menu
            selection at any time. After the first digit is received the audio will stop playing.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Gather.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Gather"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Gather.#ctor(System.Uri,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32},System.Nullable{TwilioFluent.TwiML.DTMF},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Gather"/> class.
            </summary>
            <param name="action">The action callback URI.</param>
            <param name="method">The HTTP method.</param>
            <param name="timeout">The timeout.</param>
            <param name="finishOnKey">The key on which to finish gathering.</param>
            <param name="numberOfDigits">The number of digits to gather.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Gather.#ctor(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32},System.Nullable{TwilioFluent.TwiML.DTMF},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Gather"/> class.
            </summary>
            <param name="action">The action callback URI.</param>
            <param name="method">The HTTP method.</param>
            <param name="timeout">The timeout in seconds.</param>
            <param name="finishOnKey">The key on which to finish gathering.</param>
            <param name="numberOfDigits">The number of digits to gather.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Gather.Add(TwilioFluent.TwiML.IGatherChild)">
            <summary>
            Adds the specified child element.
            </summary>
            <param name="child">The child element to add.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Gather.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:TwilioFluent.TwiML.Gather.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:TwilioFluent.TwiML.Gather.Children">
            <summary>
            Gets or sets the children of this verb.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Gather.Action">
            <summary>
            The 'action' attribute takes an absolute or relative URL as a value. When the caller
            has finished entering digits Twilio will make a GET or POST request to this URL
            including the parameters below. If no 'action' is provided, Twilio will by default
            make a POST request to the current document's URL.
            
            After making this request, Twilio will continue the current call using the TwiML
            received in your response. Keep in mind that by default Twilio will re-request the
            current document's URL, which can lead to unwanted looping behavior if you're not
            careful. Any TwiML verbs occuring after a 'Gather' are unreachable, unless the caller
            enters no digits.
            
            If the 'timeout' is reached before the caller enters any digits, or if the caller
            enters the 'finishOnKey' value before entering any other digits, Twilio will not make
            a request to the 'action' URL but instead continue processing the current TwiML
            document with the verb immediately following the 'Gather'.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Gather.Method">
            <summary>
            The 'method' attribute takes the value 'GET' or 'POST'. This tells Twilio whether to
            request the 'action' URL via HTTP GET or POST. This attribute is modeled after the
            HTML form 'method' attribute. 'POST' is the default value.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Gather.Timeout">
            <summary>
            The 'timeout' attribute sets the limit in seconds that Twilio will wait for the
            caller to press another digit before moving on and making a request to the 'action'
            URL. For example, if 'timeout' is '10', Twilio will wait ten seconds for the caller
            to press another key before submitting the previously entered digits to the
            'action' URL. Twilio waits until completing the execution of all nested verbs
            before beginning the timeout period.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Gather.FinishOnKey">
            <summary>
            The 'finishOnKey' attribute lets you choose one value that submits the received
            data when entered. For example, if you set 'finishOnKey' to '#' and the user
            enters '1234#', Twilio will immediately stop waiting for more input when the '#'
            is received and will submit "Digits=1234" to the 'action' URL. Note that the
            'finishOnKey' value is not sent. The allowed values are the digits 0-9, '#' ,
            '*' and the empty string (set 'finishOnKey' to ''). If the empty string is used,
            'Gather' captures all input and no key will end the 'Gather' when pressed. In
            this case Twilio will submit the entered digits to the 'action' URL only after
            the timeout has been reached. The default 'finishOnKey' value is '#'. The value
            can only be a single character.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Gather.NumberOfDigits">
            <summary>
            The 'numDigits' attribute lets you set the number of digits you are expecting,
            and submits the data to the 'action' URL once the caller enters that number of
            digits. For example, one might set 'numDigits' to '5' and ask the caller to enter
            a 5 digit zip code. When the caller enters the fifth digit of '94117', Twilio
            will immediately submit the data to the 'action' URL.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Gather.SerializableRepresentation">
            <summary>
            The serializable representation.  Sometime you need to return
            a proxy for things to work.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Language">
            <summary>
            Indicates a language.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.Language.English">
            <summary>
            English
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.Language.Spanish">
            <summary>
            Spanish
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.Language.French">
            <summary>
            French
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.Language.German">
            <summary>
            German
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.HttpMethod">
            <summary>
            The supported HTTP methods
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.HttpMethod.Get">
            <summary>
            HTTP GET
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.HttpMethod.Post">
            <summary>
            HTTP POST
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.HangUp">
            <summary>
            The HangUp verb ends a call. If used as the first verb in a TwiML
            response it does not prevent Twilio from answering the call and
            billing your account. The only way to not answer a call and prevent
            billing is to use the Reject verb.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Number">
            <summary>
            The Dial verb's Number noun specifies a phone number to dial. Using the noun's
            attributes you can specify particular behaviors that Twilio should apply when
            dialing the number.
            
            You can use multiple Number nouns within a Dial verb to simultaneously call
            all of them at once. The first call to pick up is connected to the current
            call and the rest are hung up.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Number.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Number"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Number.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Number"/> class.
            </summary>
            <param name="phoneNumber">The number to dial.</param>
            <param name="sendDigits">The digits to send once connected.</param>
            <param name="url">The URL with TwilML to execute on connect.</param>
        </member>
        <member name="P:TwilioFluent.TwiML.Number.SendDigits">
            <summary>
            The 'sendDigits' attribute tells Twilio to play DTMF tones when the call
            is answered. This is useful when dialing a phone number and an extension.
            Twilio will dial the number, and when the automated system picks up, send
            the DTMF tones to connect to the extension.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Number.Url">
            <summary>
            The 'url' attribute allows you to specify a url for a TwiML document that
            will run on the called party's end, after she answers, but before the
            parties are connected. You can use this TwiML to privately play or say
            information to the called party, or provide a chance to decline the phone
            call using Gather and HangUp. The current caller will continue to hear
            ringing while the TwiML document executes on the other end. TwiML documents
            executed in this manner are not allowed to contain the Dial verb.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Number.UrlSurrogate">
            <summary>
            For serialization.  See Url.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Number.PhoneNumber">
            <summary>
            The number to dial.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Number.PhoneNumberSurrogate">
            <summary>
            Used for serialization.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Pause">
            <summary>
            The 'Pause' verb waits silently for a specific number of seconds. If 'Pause'
            is the first verb in a TwiML document, Twilio will wait the specified number
            of seconds before picking up the call.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Pause.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Pause"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Pause.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Pause"/> class.
            </summary>
            <param name="length">How many seconds Twilio will wait silently before continuing on.</param>
        </member>
        <member name="P:TwilioFluent.TwiML.Pause.Length">
            <summary>
            How many seconds Twilio will wait silently before continuing on.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.DTMF">
            <summary>
            The tones available on a phone.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.None">
            <summary>
            Not used by Twilio
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Zero">
            <summary>
            0
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.One">
            <summary>
            1
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Two">
            <summary>
            2
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Three">
            <summary>
            3
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Four">
            <summary>
            4
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Five">
            <summary>
            5
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Six">
            <summary>
            6
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Seven">
            <summary>
            7
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Eight">
            <summary>
            8
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Nine">
            <summary>
            9
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Star">
            <summary>
            *
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Pound">
            <summary>
            #
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.DTMF.Any">
            <summary>
            All digits plus star and pound.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Play">
            <summary>
            The Play verb plays an audio file back to the caller. Twilio retrieves the file from a
            URL that you provide.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Play.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Play"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Play.#ctor(System.Uri,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Play"/> class.
            </summary>
            <param name="uri">The URI to play.</param>
            <param name="loop">The number of times to loop.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Play.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Play"/> class.
            </summary>
            <param name="uri">The URI to play.</param>
            <param name="loop">The number of times to loop.</param>
        </member>
        <member name="P:TwilioFluent.TwiML.Play.Loop">
            <summary>
            Specifies how many times you'd like the text repeated. The default is once. Specifying
            0 will cause the the Say verb to loop until the call is hung up. The default is 1.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Play.Uri">
            <summary>
            Gets or sets the Uri of the resource to play.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Play.UriSurrogate">
            <summary>
            For serialization.  See Uri.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Record">
            <summary>
            The 'Record' verb records the caller's voice and returns to you the URL of a file
            containing the audio recording. You can optionally generate text transcriptions of
            recorded calls by setting the 'transcribe' attribute of the 'Record' verb to 'true'.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Record.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Gather"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Record.#ctor(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.Nullable{System.Int32},System.Nullable{TwilioFluent.TwiML.DTMF},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Record"/> class.
            </summary>
            <param name="action">The action URL to callback.</param>
            <param name="method">The HTTP method to use.</param>
            <param name="timeout">The timeout in seconds.</param>
            <param name="finishOnKey">The key on which to finish.</param>
            <param name="maxLength">The maximum duration to record.</param>
            <param name="transcribe">True to transcribe the call.</param>
            <param name="transcribeCallback">The URL to call back when transcription is complete.</param>
            <param name="playBeep">True to play a beep when beginning recording.</param>
        </member>
        <member name="P:TwilioFluent.TwiML.Record.Action">
            <summary>
            The 'action' attribute takes an absolute or relative URL as a value. When recording
            is finished Twilio will make a GET or POST request to this URL including the
            parameters below. If no 'action' is provided, 'Record' will default to requesting
            the current document's URL.
            
            After making this request, Twilio will continue the current call using the TwiML
            received in your response. Keep in mind that by default Twilio will re-request the
            current document's URL, which can lead to unwanted looping behavior if you're not
            careful. Any TwiML verbs occuring after a 'Record' are unreachable.
            
            There is one exception: if Twilio receives an empty recording, it will not make a
            request to the 'action' URL. The current call flow will continue with the next verb
            in the current TwiML document.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Record.ActionSurrogate">
            <summary>
            For serialization.  See Action.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Record.Method">
            <summary>
            The 'method' attribute takes the value 'GET' or 'POST'. This tells Twilio whether to
            request the 'action' URL via HTTP GET or POST. This attribute is modeled after the
            HTML form 'method' attribute. 'POST' is the default value.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Record.Timeout">
            <summary>
            The 'timeout' attribute tells Twilio to end the recording after a number of seconds
            of silence has passed. The default is 5 seconds.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Record.FinishOnKey">
            <summary>
            The 'finishOnKey' attribute lets you choose a set of digits that end the recording
            when entered. For example, if you set 'finishOnKey' to '#' and the caller presses '#',
            Twilio will immediately stop recording and submit 'RecordingUrl', 'RecordingDuration',
            and the '#' as parameters in a request to the 'action' URL. The allowed values are the
            digits 0-9, '#' and '*'. The default is '1234567890*#' (i.e. any key will end the
            recording). Unlike 'Gather', you may specify more than one character as a
            'finishOnKey' value.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Record.MaxLength">
            <summary>
            The 'maxLength' attribute lets you set the maximum length for the recording in
            seconds. If you set 'maxLength' to '30', the recording will automatically end after 30
            seconds of recorded time has elapsed. This defaults to 3600 seconds (one hour) for a
            normal recording and 120 seconds (two minutes) for a transcribed recording.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Record.Transcribe">
            <summary>
            The 'transcribe' attribute tells Twilio that you would like a text representation of
            the audio of the recording. Twilio will pass this recording to our speech-to-text
            engine and attempt to convert the audio to human readable text. The 'transcribe'
            option is off by default. If you do not wish to perform transcription, simply do not
            include the transcribe attribute.
            
            Note: transcription is a pay feature. If you include a 'transcribe' or
            'transcribeCallback' attribute on your 'record' verb your account will be charged. See
            the pricing page for our transcription prices. 
            
            Additionally, transcription is currently limited to recordings with a duration of
            two minutes or less. If you enable transcription and set 'maxLength' > 120 seconds,
            Twilio will write a warning to your debug log rather than transcribing the recording.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Record.TranscribeCallback">
            <summary>
            The 'transcribeCallback' attribute is used in conjunction with the 'transcribe'
            attribute. It allows you to specify a URL to which Twilio will make an asynchronous POST
            request when the transcription is complete. This is not a request for TwiML and the
            response will not change call flow, but the request will contain the standard TwiML 
            request parameters as well as 'TranscriptionStatus', 'TranscriptionText', 
            'TranscriptionUrl' and 'RecordingUrl'. If 'transcribeCallback' is not specified, the
            completed transcription will be stored for you to retrieve later (see the REST API
            Transcriptions section), but Twilio will not asynchronously notify your application.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Record.TranscribeCallbackSurrogate">
            <summary>
            For serialization.  See TranscribeCallback.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Record.PlayBeep">
            <summary>
            The 'playBeep' attribute allows you to toggle between playing a sound before the
            start of a recording. If you set the value to 'false', no beep sound will be played.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Redirect">
            <summary>
            The Redirect verb transfers control of a call to the TwiML at a different
            URL. All verbs after Redirect are unreachable and ignored.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Redirect.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Redirect"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Redirect.#ctor(System.Uri,System.Nullable{TwilioFluent.TwiML.HttpMethod})">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Redirect"/> class.
            </summary>
            <param name="uri">The URI to fetch next.</param>
            <param name="method">The HTTP method for the request.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Redirect.#ctor(System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod})">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Redirect"/> class.
            </summary>
            <param name="uri">The URI to fetch next.</param>
            <param name="method">The HTTP method for the request.</param>
        </member>
        <member name="P:TwilioFluent.TwiML.Redirect.Method">
            <summary>
            The 'method' attribute takes the value 'GET' or 'POST'. This tells Twilio
            whether to request the Redirect URL via HTTP GET or POST. 'POST' is the
            default.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Redirect.Uri">
            <summary>
            Gets or sets the Uri to fetch next.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Redirect.UriSurrogate">
            <summary>
            For serialization.  See Uri.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Reject">
            <summary>
            The Reject verb rejects an incoming call to your Twilio number without
            billing you. This is very useful for blocking unwanted calls.
            
            If the first verb in a TwiML document is Reject, Twilio will not pick
            up the call. The call ends with a status of 'busy' or 'no-answer',
            depending on the verb's 'reason' attribute. Any verbs after Reject are
            unreachable and ignored.
            
            Note that using Reject as the first verb in your response is the only
            way to prevent Twilio from answering a call. Any other response will
            result in an answered call and your account will be billed.
            
            Reject won't work when handling calls to your sandbox number. Twilio
            must pick up the call to ask for the pin, at which point it's too late
            to reject.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Reject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Reject"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Reject.#ctor(TwilioFluent.TwiML.Reason)">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Reject"/> class.
            </summary>
            <param name="reason">The reason for rejection.</param>
        </member>
        <member name="P:TwilioFluent.TwiML.Reject.Reason">
            <summary>
            The reason attribute takes the values "rejected" and "busy." This
            tells Twilio what message to play when rejecting a call. Selecting
            "busy" will play a busy signal to the caller, while selecting
            "rejected" will play a standard not-in-service response. If this
            attribute's value isn't set, the default is "rejected."
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Say">
            <summary>
            The Say verb converts text to speech that is read back to the caller. Say is useful
            for development or saying dynamic text that is difficult to pre-record.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Say.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Say"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Say.#ctor(System.String,System.Nullable{TwilioFluent.TwiML.Voice},System.Nullable{TwilioFluent.TwiML.Language},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Say"/> class.
            </summary>
            <param name="text">The text to speak.</param>
            <param name="voice">The voice to use.</param>
            <param name="language">The language to use.</param>
            <param name="loop">The number of times to loop.</param>
        </member>
        <member name="M:TwilioFluent.TwiML.Say.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Say"/> class.
            </summary>
            <param name="format">The format string for the text to speak.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="P:TwilioFluent.TwiML.Say.Voice">
            <summary>
            Allows you to choose a male or female voice to read text back. The default value is
            Voice.Man.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Say.Language">
            <summary>
            Allows you pick a voice with a specific language's accent and pronunciations. Twilio
            currently supports languages English, Spanish, French, and German. The default is
            English.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Say.Loop">
            <summary>
            Specifies how many times you'd like the text repeated. The default is once. Specifying
            0 will cause the the Say verb to loop until the call is hung up. The default is 1.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Say.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Voice">
            <summary>
            The different Twilio voices
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.Voice.Man">
            <summary>
            Use a male voice.
            </summary>
        </member>
        <member name="F:TwilioFluent.TwiML.Voice.Woman">
            <summary>
            Use a female voice.
            </summary>
        </member>
        <member name="T:TwilioFluent.TwiML.Sms">
            <summary>
            The 'Record' verb records the caller's voice and returns to you the URL of a file
            containing the audio recording. You can optionally generate text transcriptions of
            recorded calls by setting the 'transcribe' attribute of the 'Record' verb to 'true'.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Sms.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Sms"/> class.
            </summary>
        </member>
        <member name="M:TwilioFluent.TwiML.Sms.#ctor(System.String,System.String,System.String,System.String,System.Nullable{TwilioFluent.TwiML.HttpMethod},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TwilioFluent.TwiML.Sms"/> class.
            </summary>
            <param name="text">The SMS text to send.</param>
            <param name="to">The recipient.</param>
            <param name="from">The sender.</param>
            <param name="action">The URL to call back to continue the call. Null to continue processing the current response.</param>
            <param name="method">The HTTP method to call back.</param>
            <param name="statusCallback">The status callback for delivery reporting.</param>
        </member>
        <member name="P:TwilioFluent.TwiML.Sms.To">
            <summary>
            The 'to' attribute takes a valid phone number as a value. Twilio will send an
            SMS message to this number. When sending an SMS during an incoming call, 'to'
            defaults to the caller. When sending an SMS during an outgoing call, 'to'
            defaults to the called party. The value of 'to' must be a valid phone number.
            NOTE: sending to short codes is not currently supported.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Sms.ToSurrogate">
            <summary>
            Used for serialization.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Sms.From">
            <summary>
            The 'from' attribute takes a valid phone number as an argument. This number
            must be a phone number that you've purchased from or ported to Twilio. When
            sending an SMS during an incoming call, 'from' defaults to the called party.
            When sending an SMS during an outgoing call, 'from' defaults to the calling
            party. This number must be an SMS-capable local phone number assigned to your
            account. If the phone number isn't SMS-capable, then the Sms verb will not
            send an SMS message.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Sms.FromSurrogate">
            <summary>
            Used for serialization.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Sms.Action">
            <summary>
            The 'action' attribute takes a URL as an argument. After processing the Sms verb,
            Twilio will make a GET or POST request to this URL with the form parameters
            'SmsStatus' and 'SmsSid'. Using an 'action' URL, your application can receive
            synchronous notification that the message was successfully enqueued.
            
            If you provide an 'action' URL, Twilio will use the TwiML received in your
            response to the 'action' URL request to continue the current call. Any TwiML
            verbs occuring after an Sms which specifies an 'action' attribute are unreachable.
            
            If no 'action' is provided, Sms will finish and Twilio will move on to the next
            TwiML verb in the document. If there is no next verb, Twilio will end the phone
            call. Note that this is different from the behavior of Record and Gather. Sms
            does not make a request to the current document's URL by default if no 'action'
            URL is provided.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Sms.ActionSurrogate">
            <summary>
            For serialization.  See Action.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Sms.Method">
            <summary>
            The 'method' attribute takes the value 'GET' or 'POST'. This tells Twilio whether
            to request the 'action' URL via HTTP GET or POST. This attribute is modeled after
            the HTML form 'method' attribute. 'POST' is the default value.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Sms.StatusCallback">
            <summary>
            The 'transcribeCallback' attribute is used in conjunction with the 'transcribe'
            attribute. It allows you to specify a URL to which Twilio will make an asynchronous POST
            request when the transcription is complete. This is not a request for TwiML and the
            response will not change call flow, but the request will contain the standard TwiML 
            request parameters as well as 'TranscriptionStatus', 'TranscriptionText', 
            'TranscriptionUrl' and 'RecordingUrl'. If 'transcribeCallback' is not specified, the
            completed transcription will be stored for you to retrieve later (see the REST API
            Transcriptions section), but Twilio will not asynchronously notify your application.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Sms.StatusCallbackSurrogate">
            <summary>
            For serialization.  See TranscribeCallback.
            </summary>
        </member>
        <member name="P:TwilioFluent.TwiML.Sms.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
    </members>
</doc>
